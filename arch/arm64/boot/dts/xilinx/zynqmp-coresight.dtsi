/ {
    misc_clk: misc_clk {
        compatible = "fixed-clock";
        #clock-cells = <0>;
        clock-frequency = <25000000>;
    };

    // Cortex a53's ETMs
    etm0@fec40000 {
        compatible = "arm,coresight-etm4x", "arm,primecell";
        reg = <0 0xfec40000 0 0x1000>;
        cpu = <&cpu0>;
        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        out-ports {
            port {
                etm0_out_port: endpoint {
                    remote-endpoint = <&funnel_in_port0>;
                };
            };
        };
    };

    etm1@fed40000 {
        compatible = "arm,coresight-etm4x", "arm,primecell";
        reg = <0 0xfed40000 0 0x1000>;
        cpu = <&cpu1>;
        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        out-ports {
            port {
                etm1_out_port: endpoint {
                    remote-endpoint = <&funnel_in_port1>;
                };
            };
        };
    };

    etm2@fee40000 {
        compatible = "arm,coresight-etm4x", "arm,primecell";
        reg = <0 0xfee40000 0 0x1000>;
        cpu = <&cpu2>;
        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        out-ports {
            port {
                etm2_out_port: endpoint {
                    remote-endpoint = <&funnel_in_port2>;
                };
            };
        };
    };

    etm3@fef40000 {
        compatible = "arm,coresight-etm4x", "arm,primecell";
        reg = <0 0xfef40000 0 0x1000>;
        cpu = <&cpu3>;
        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        out-ports {
            port {
                etm3_out_port: endpoint {
                    remote-endpoint = <&funnel_in_port3>;
                };
            };
        };
    };

    //funnels
    funnel@fe920000 {
        compatible = "arm,coresight-funnel", "arm,primecell";
        reg = <0 0xfe920000 0 0x1000>;
        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        in-ports {
            #address-cells = <0x1>;
            #size-cells = <0x0>;
            port@0 {
                reg = <0x0>;
                funnel_in_port0: endpoint {
                    slave-mode;
                    remote-endpoint = <&etm0_out_port>;
                };
            };
            port@1 {
                reg = <0x1>;
                funnel_in_port1: endpoint {
                    slave-mode;
                    remote-endpoint = <&etm1_out_port>;
                };
            };
            port@2 {
                reg = <0x2>;
                funnel_in_port2: endpoint {
                    slave-mode;
                    remote-endpoint = <&etm2_out_port>;
                };
            };
            port@3 {
                reg = <0x3>;
                funnel_in_port3: endpoint {
                    slave-mode;
                    remote-endpoint = <&etm3_out_port>;
                };
            };
        };
        out-ports {
            port {
                funnel_out_port0: endpoint {
                    remote-endpoint = <&etb4k_in_port>;
                };
            };
        };
    };

    funnel_main@fe930000 {
        compatible = "arm,coresight-funnel", "arm,primecell";
        reg = <0 0xfe930000 0 0x1000>;
        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        in-ports {
            port {
                funnel_main_in_port0: endpoint {
                    slave-mode;
                    remote-endpoint = <&stm_out_port>;
                };
            };
        };
        out-ports {
            #address-cells = <0x1>;
            #size-cells = <0x0>;
            port@0 {
                reg = <0x0>;
                funnel_main_out_port0: endpoint {
                    remote-endpoint = <&etb8k_in_port>;
                };
            };
            port@1 {
                reg = <0x1>;
                funnel_main_in_port1: endpoint {
                    slave-mode;
                    remote-endpoint = <&etb4k_out_port>;
                };
            };
           // port@3 { // cortex r5 funnel3p
           //     reg = <0x2>;
           //     funnel_in_port2: endpoint {
           //         slave-mode;
           //         remote-endpoint = <&etm2_out_port>;
           //     };
           // };
           // port@4 { // atm
           //     reg = <0x3>;
           //     funnel_in_port3: endpoint {
           //         slave-mode;
           //         remote-endpoint = <&etm3_out_port>;
           //     };
           // };
        };
    };

    // ETFs (i.e. FIFOs)
    etb4k@fe940000 {
        compatible = "arm,coresight-etb10", "arm,primecell";
        reg = <0 0xfe940000 0 0x1000>;
        //coresight-default-sink;
        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        in-ports {
            port {
                etb4k_in_port: endpoint {
                    slave-mode;
                    remote-endpoint = <&funnel_out_port0>;
                };
            };
        };
        out-ports {
            port {
                etb4k_out_port: endpoint {
                    remote-endpoint = <&funnel_main_in_port1>;
                };
            };
        };
    };

    etb8k@fe950000 {
        compatible = "arm,coresight-etb10", "arm,primecell";
        reg = <0 0xfe950000 0 0x1000>;
        //coresight-default-sink;
        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        in-ports {
            port {
                etb8k_in_port: endpoint {
                    slave-mode;
                    remote-endpoint = <&funnel_main_out_port0>;
                };
            };
        };
        out-ports {
            port {
                etb8k_out_port: endpoint {
                    remote-endpoint = <&replicator_in_port0>;
                };
            };
        };
    };

    // replicator
    replicator {
        compatible = "arm,coresight-replicator";
        in-ports {
            port {
                replicator_in_port0: endpoint {
                    slave-mode;
                    remote-endpoint = <&etb8k_out_port>;
                };
            };
        };
        out-ports {
            #address-cells = <0x1>;
            #size-cells = <0x0>;
            port@0 {
                reg = <0x0>;
                replicator_out_port0: endpoint {
                    remote-endpoint = <&etr_in_port>;
                };
            };
            port@1 {
                reg = <0x1>;
                replicator_out_port1: endpoint {
                    remote-endpoint = <&tpiu_in_port>;
                };
            };
        };
    };

    // ETR - trace router
    etr@fe970000 {
        compatible = "arm,coresight-tmc", "arm,primecell";
        reg = <0 0xfe970000 0 0x1000>;
        // iommus = <&smmu_etr 0>;

        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        // power-domains = <&scpi_devpd 0>;
        in-ports {
            port {
                etr_in_port: endpoint {
                    slave-mode;
                    remote-endpoint = <&replicator_out_port0>;
                };
            };
        };
    };

    // TPIU
    tpiu@fe980000  {
        compatible = "arm,coresight-tpiu", "arm,primecell";
        reg = <0 0xfe980000 0 0x1000>;

        clocks = <&misc_clk>; // add PL clock also someday
        clock-names = "apb_pclk";
        // power-domains = <&scpi_devpd 0>;
        in-ports {
            port {
                tpiu_in_port: endpoint {
                    slave-mode;
                    remote-endpoint = <&replicator_out_port1>;
                };
            };
        };
    };

    // STM
    stm@fe9c0000 {
        compatible = "arm,coresight-stm", "arm,primecell";
        reg = <0 0xfe9c0000 0 0x1000>,
            <0 0xf8000000 0 0x1000000>;
        reg-names = "stm-base", "stm-stimulus-base";
        clocks = <&misc_clk>;
        clock-names = "apb_pclk";
        // power-domains = <&scpi_devpd 0>;
        out-ports {
            port {
                stm_out_port: endpoint {
                    remote-endpoint = <&funnel_main_in_port0>;
                };
            };
        };
    };
};

